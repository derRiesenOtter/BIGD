services:
  kafka-1:
    image: confluentinc/cp-kafka:7.6.1 # Specifies the Docker image for the Kafka broker.
    hostname: kafka-1 # Sets the hostname for the container to kafka-1.
    container_name: kafka-1 # Names the container kafka-1 for easy identification.
    ports:
      - "9092:9092" # Maps port 9092 on the host to port 9092 on the container for Kafka traffic.
    environment: # Environment variables for Kafka configuration.
      KAFKA_NODE_ID: 1 # Unique ID for the Kafka broker.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT" # Maps listener names to security protocols.
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092" # Listeners advertised to clients.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3 # Replication factor for the offsets topic.
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2 # Minimum in-sync replicas for transaction state log topic.
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3 # Replication factor for the transaction state log topic.
      KAFKA_PROCESS_ROLES: "broker,controller" # Roles assigned to the process.
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-1:29093,2@kafka-2:29093,3@kafka-3:29093" # List of controller quorum voters.
      KAFKA_LISTENERS: "PLAINTEXT://kafka-1:29092,CONTROLLER://kafka-1:29093,PLAINTEXT_HOST://0.0.0.0:9092" # List of listeners with their addresses and ports.
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT" # Listener used for communication between brokers.
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER" # Listeners used for controller communication.
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs" # Directory for log data.
      KAFKA_METADATA_LOG_DIR: "/tmp/kraft-metadata-logs" # Directory for metadata logs.
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk" # Unique identifier for the Kafka cluster.

  # kafka-2:
  #   image: confluentinc/cp-kafka:7.6.1
  #   hostname: kafka-2
  #   container_name: kafka-2
  #   ports:
  #     - "9093:9093"
  #   environment:
  #     KAFKA_NODE_ID: 2
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
  #     KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-2:29092,PLAINTEXT_HOST://localhost:9093"
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  #     KAFKA_PROCESS_ROLES: "broker,controller"
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-1:29093,2@kafka-2:29093,3@kafka-3:29093"
  #     KAFKA_LISTENERS: "PLAINTEXT://kafka-2:29092,CONTROLLER://kafka-2:29093,PLAINTEXT_HOST://0.0.0.0:9093"
  #     KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
  #     KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  #     KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
  #     KAFKA_METADATA_LOG_DIR: "/tmp/kraft-metadata-logs"
  #     CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
  #
  # kafka-3:
  #   image: confluentinc/cp-kafka:7.6.1
  #   hostname: kafka-3
  #   container_name: kafka-3
  #   ports:
  #     - "9094:9094"
  #   environment:
  #     KAFKA_NODE_ID: 3
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
  #     KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-3:29092,PLAINTEXT_HOST://localhost:9094"
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  #     KAFKA_PROCESS_ROLES: "broker,controller"
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-1:29093,2@kafka-2:29093,3@kafka-3:29093"
  #     KAFKA_LISTENERS: "PLAINTEXT://kafka-3:29092,CONTROLLER://kafka-3:29093,PLAINTEXT_HOST://0.0.0.0:9094"
  #     KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
  #     KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  #     KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
  #     KAFKA_METADATA_LOG_DIR: "/tmp/kraft-metadata-logs"
  #     CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.1
    container_name: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      - kafka-1
      # - kafka-2
      # - kafka-3
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-1:29092" #, kafka-2:29093, kafka-3:29094"

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.6.1
    container_name: kafka-connect
    depends_on:
      - kafka-1
      # - kafka-2
      # - kafka-3
      # - schema-registry
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka-1:29092" #, kafka-2:29093, kafka-3:29094"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      # CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: "./connect-plugins/"
    volumes:
      - $PWD/data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    hostname: elasticsearch
    ports:
      - 9200:9200
    environment:
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      discovery.type: "single-node"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    hostname: kibana
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    environment:
      xpack.security.enabled: "false"
      discovery.type: "single-node"
